// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as UseDimensions from "./useDimensions.res.mjs";
import * as UseEditorLayout from "./useEditorLayout.res.mjs";

function useEvent(fn) {
  var ref = React.useRef(fn);
  React.useLayoutEffect(function () {
        ref.current = fn;
      });
  return React.useCallback((function (arg) {
                ref.current(arg);
              }), []);
}

function useToggle($$default) {
  var match = React.useState(function () {
        return $$default;
      });
  var setState = match[1];
  var on = React.useCallback((function () {
          setState(function (param) {
                return true;
              });
        }), []);
  var off = React.useCallback((function () {
          setState(function (param) {
                return false;
              });
        }), []);
  var toggle = React.useCallback((function () {
          setState(function (state) {
                return !state;
              });
        }), []);
  return [
          match[0],
          React.useMemo((function () {
                  return {
                          on: on,
                          off: off,
                          toggle: toggle
                        };
                }), [])
        ];
}

var DocumentEvent = UseDimensions.DocumentEvent;

var getDimensions = UseDimensions.getDimensions;

var useDimensions = UseDimensions.useDimensions;

var min_timeline_height = UseEditorLayout.min_timeline_height;

var min_media_controls_width = UseEditorLayout.min_media_controls_width;

var emptySize = UseEditorLayout.emptySize;

var sizeToStyle = UseEditorLayout.sizeToStyle;

var calculatePreviewSize = UseEditorLayout.calculatePreviewSize;

var useEditorLayout = UseEditorLayout.useEditorLayout;

export {
  DocumentEvent ,
  getDimensions ,
  useDimensions ,
  min_timeline_height ,
  min_media_controls_width ,
  emptySize ,
  sizeToStyle ,
  calculatePreviewSize ,
  useEditorLayout ,
  useEvent ,
  useToggle ,
}
/* react Not a pure module */
