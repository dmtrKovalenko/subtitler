// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Dock from "./Dock.res.mjs";
import * as Tabs from "../../ui/Tabs.res.mjs";
import * as Hooks from "../../hooks/Hooks.res.mjs";
import * as Utils from "../../Utils.res.mjs";
import * as React from "react";
import * as Timeline from "./Timeline/Timeline.res.mjs";
import * as ChunksList from "./ChunksList/ChunksList.res.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as StyleEditor from "./StyleEditor/StyleEditor.res.mjs";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";
import * as EditorCanvas from "./EditorCanvas.res.mjs";
import * as EditorContext from "./EditorContext.res.mjs";
import * as UseEditorLayout from "../../hooks/useEditorLayout.res.mjs";
import * as JsxRuntime from "react/jsx-runtime";

function a(prim) {
  return {};
}

function Editor(props) {
  var subtitles = props.subtitles;
  var match = Hooks.useToggle(false);
  var ctx = EditorContext.useEditorContext();
  var layout = Hooks.useEditorLayout(match[0]);
  React.useEffect((function () {
          Belt_Option.forEach(Caml_option.nullable_to_opt(ctx.canvasRef.current), (function (param) {
                  console.log("Happy video hacking! Your preview will be rendered at", param);
                }));
        }), []);
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsxs("div", {
                      children: [
                        Core__Option.getOr(Belt_Option.map(layout.mediaControls, (function (size) {
                                    return JsxRuntime.jsx("div", {
                                                children: JsxRuntime.jsx("div", {
                                                      children: JsxRuntime.jsx(Tabs.make, {
                                                            tabs: [
                                                              {
                                                                id: "subtitles",
                                                                name: "Subtitles",
                                                                content: JsxRuntime.jsx(ChunksList.make, {
                                                                      subtitles: subtitles
                                                                    })
                                                              },
                                                              {
                                                                id: "style",
                                                                name: "Style",
                                                                content: JsxRuntime.jsx(StyleEditor.make, {})
                                                              }
                                                            ],
                                                            defaultIndex: 1
                                                          }),
                                                      className: "flex items-center flex-col mb-6 pt-1 gap-2"
                                                    }),
                                                className: "col-span-2 h-full overflow-auto flex flex-col p-4 border-r border-zinc-800",
                                                style: UseEditorLayout.sizeToStyle(size)
                                              });
                                  })), null),
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx("canvas", {
                                      ref: Caml_option.some(ctx.canvasRef),
                                      className: "bg-black origin-top-left absolute left-0 top-0",
                                      id: "editor-preview",
                                      style: {
                                        height: ctx.videoMeta.height.toString() + "px",
                                        width: ctx.videoMeta.width.toString() + "px",
                                        transform: "scale(" + layout.preview.scale.toString() + ")"
                                      },
                                      height: ctx.videoMeta.height.toString(),
                                      width: ctx.videoMeta.width.toString()
                                    }),
                                JsxRuntime.jsx(EditorCanvas.make, {
                                      width: ctx.videoMeta.width,
                                      height: ctx.videoMeta.height,
                                      style: {
                                        height: ctx.videoMeta.height.toString() + "px",
                                        width: ctx.videoMeta.width.toString() + "px",
                                        transform: "scale(" + layout.preview.scale.toString() + ")"
                                      },
                                      className: "bg-transparent origin-top-left absolute left-0 top-0",
                                      subtitles: subtitles
                                    })
                              ],
                              className: "relative",
                              style: UseEditorLayout.sizeToStyle(layout.preview)
                            })
                      ],
                      className: "overflow-auto flex justify-center w-full"
                    }),
                Utils.$$Option.unwrapOr(Belt_Option.map(layout.timeLine, (function (sectionSize) {
                            return JsxRuntime.jsx("div", {
                                        children: JsxRuntime.jsx(Timeline.make, {
                                              sectionSize: sectionSize
                                            }),
                                        className: "shadow-lg w-screen bg-zinc-800",
                                        style: UseEditorLayout.sizeToStyle(sectionSize)
                                      });
                          })), null),
                JsxRuntime.jsx(Dock.make, {
                      fullScreenToggler: match[1]
                    })
              ],
              className: "w-screen h-screen bg-zinc-900 overflow-hidden relative",
              id: "fframes-editor"
            });
}

var make = Editor;

export {
  a ,
  make ,
}
/* Dock Not a pure module */
