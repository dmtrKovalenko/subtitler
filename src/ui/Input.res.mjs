// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cx from "rescript-classnames/src/Cx.res.mjs";
import * as React from "react";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";
import * as React$1 from "@headlessui/react";
import * as JsxRuntime from "react/jsx-runtime";

var Field = {};

var HeadlessLabel = {};

function Input$Label(props) {
  return JsxRuntime.jsx(React$1.Label, {
              htmlFor: props.forId,
              className: Cx.cx([
                    "text-sm/6 ml-1.5 font-medium text-white",
                    Core__Option.getOr(props.className, "")
                  ]),
              children: props.children
            });
}

var Label = {
  HeadlessLabel: HeadlessLabel,
  make: Input$Label
};

function Input(props) {
  var onChange = props.onChange;
  var adornmentClassName = props.adornmentClassName;
  var adornmentPosition = props.adornmentPosition;
  var adornment = props.adornment;
  var id = React.useId();
  var tmp;
  tmp = adornment !== undefined ? (
      adornmentPosition !== undefined && adornmentPosition !== "Left" ? "pr-12" : "pl-12"
    ) : "";
  return JsxRuntime.jsxs(React$1.Field, {
              className: Core__Option.getOr(props.className, ""),
              children: [
                JsxRuntime.jsx(Input$Label, {
                      forId: id,
                      children: props.label,
                      className: Cx.cx([Core__Option.getOr(props.labelHidden, false) ? "sr-only" : ""])
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        Core__Option.getOr(Core__Option.map(adornment, (function (adornment) {
                                    var tmp;
                                    tmp = adornmentPosition !== undefined && adornmentPosition !== "Left" ? "right-0" : "left-0";
                                    return JsxRuntime.jsx("div", {
                                                children: adornment,
                                                className: Cx.cx([
                                                      Core__Option.getOr(adornmentClassName, ""),
                                                      "absolute m-1 px-2 inset-y-0 flex justify-center items-center",
                                                      tmp
                                                    ])
                                              });
                                  })), null),
                        JsxRuntime.jsx("input", {
                              ref: props.inputRef,
                              defaultValue: props.defaultValue,
                              className: Cx.cx([
                                    "block w-full rounded-lg border-none bg-white/10 py-1.5 px-3 text-sm/6 text-white focus:outline-none focus:outline-2 focus:-outline-offset-2 focus:outline-orange-400",
                                    tmp
                                  ]),
                              id: id,
                              max: props.max,
                              min: props.min,
                              placeholder: props.placeholder,
                              readOnly: Core__Option.getOr(props.readOnly, false),
                              step: props.step,
                              type: Core__Option.getOr(props.type_, "text"),
                              value: Core__Option.getOr(props.value, undefined),
                              onKeyDown: props.onKeyDown,
                              onChange: (function (e) {
                                  Core__Option.forEach(onChange, (function (onChange) {
                                          onChange(e.currentTarget.value);
                                        }));
                                })
                            })
                      ],
                      className: "relative rounded-lg flex"
                    })
              ]
            });
}

var make = Input;

export {
  Field ,
  Label ,
  make ,
}
/* react Not a pure module */
