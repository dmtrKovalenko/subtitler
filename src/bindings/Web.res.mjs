// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";

var $$Window = {};

var $$Document = {};

var targetAsElement = (_ => _);

var $$Element = {
  targetAsElement: targetAsElement
};

function isFocusable(el) {
  var match = el.tagName;
  switch (match) {
    case "A" :
    case "BUTTON" :
    case "INPUT" :
    case "SELECT" :
    case "TEXTAREA" :
        return true;
    default:
      var match$1 = el.getAttribute("role");
      if (match$1 == null) {
        return false;
      }
      switch (match$1) {
        case "button" :
        case "checkbox" :
        case "input" :
        case "link" :
        case "option" :
        case "slider" :
            return true;
        default:
          return false;
      }
  }
}

function isFocusingInteractiveElement() {
  return Core__Option.getOr(Core__Option.map(Caml_option.nullable_to_opt(document.activeElement), isFocusable), false);
}

function onSeeked(video, cb) {
  video.addEventListener("seeked", (function (param) {
          cb();
        }));
}

function onSeekedOnce(video, cb) {
  video.addEventListener("seeked", (function (param) {
          cb();
        }), {
        passive: true,
        once: true,
        capture: false
      });
}

function onLoadedData(video, cb) {
  video.addEventListener("loadeddata", (function (param) {
          cb();
        }));
}

function onLoadedDataOnce(video, cb) {
  video.addEventListener("loadeddata", (function (param) {
          cb();
        }), {
        passive: true,
        once: true,
        capture: false
      });
}

var Video = {
  onSeeked: onSeeked,
  onSeekedOnce: onSeekedOnce,
  onLoadedData: onLoadedData,
  onLoadedDataOnce: onLoadedDataOnce
};

export {
  $$Window ,
  $$Document ,
  $$Element ,
  isFocusable ,
  isFocusingInteractiveElement ,
  Video ,
}
/* No side effect */
